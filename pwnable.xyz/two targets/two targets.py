from pwn import *

def nibble_swap(b):
    return ((b >> 4) | (b << 4)) & 0xFF

s2 = [
    0x11, 0xDE, 0xCF, 0x10, 0xDF, 0x75, 0xBB, 0xA5,
    0x43, 0x1E, 0x9D, 0xC2, 0xE3, 0xBF, 0xF5, 0xD6,
    0x96, 0x7F, 0xBE, 0xB0, 0xBF, 0xB7, 0x96, 0x1D,
    0xA8, 0xBB, 0x0A, 0xD9, 0xBF, 0xC9, 0x0D, 0xFF
]

main = [
    0x55, 0x48, 0x89, 0xe5, 0x48, 0x83, 0xec, 0x50,
    0x64, 0x48, 0x8b, 0x04, 0x25, 0x28, 0x00, 0x00,
    0x00, 0x48, 0x89, 0x45, 0xf8, 0x31, 0xc0, 0xe8,
    0x24, 0xfe, 0xff, 0xff, 0x48, 0x8d, 0x45, 0xc0
]

#p = process("./challenge")
p = remote('svc.pwnable.xyz', 30031)

payload = ['\x00']*0x20
for i in range(32):
    xored = s2[i] ^ main[i]
    payload[i] = chr(nibble_swap(xored))

payload = ''.join(payload)

p.sendlineafter("> ", "1")
p.sendline(payload)
p.sendlineafter("> ", "4")
p.interactive()